name: Build HackerKit APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: 🧾 检出代码
        uses: actions/checkout@v3

      # 设置 Java 11 环境
      - name: ☕️ 设置 Java 11 环境
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "microsoft"

      # 缓存 NuGet 包以加速构建
      - name: 💾 缓存 NuGet 包
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # 恢复 NuGet 包
      - name: 🔄 恢复 NuGet 包
        run: nuget restore HackerKit.sln

      # 查找 MSBuild 路径
      - name: 🔍 查找 MSBuild 路径
        id: msbuild
        shell: pwsh
        run: |
          $msbuildPath = vswhere -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          echo "MSBUILD_PATH=$msbuildPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "Found msbuild: $msbuildPath"

      # 🚀 运行 release-please，生成版本和 Release Notes
      - name: 🚀 运行 release-please，生成版本和 Release Notes
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: .github/.release-please-config.json
          manifest-file: .github/.release-please-manifest.json

      # 构建 Android ARM64
      - name: 🏗️ 构建 Android ARM64
        shell: pwsh
        run: |
          & "${env:MSBUILD_PATH}" HackerKit.Android/HackerKit.Android.csproj /t:SignAndroidPackage /p:Configuration=Release /p:Platform=arm64 /p:Version=$steps.release.outputs.tag_name

      # 构建 Android AMD64
      - name: 🏗️ 构建 Android AMD64
        shell: pwsh
        run: |
          & "${env:MSBUILD_PATH}" HackerKit.Android/HackerKit.Android.csproj /t:SignAndroidPackage /p:Configuration=Release /p:Platform=amd64 /p:Version=$steps.release.outputs.tag_name

      # 构建 Android ARM32
      - name: 🏗️ 构建 Android ARM32
        shell: pwsh
        run: |
          & "${env:MSBUILD_PATH}" HackerKit.Android/HackerKit.Android.csproj /t:SignAndroidPackage /p:Configuration=Release /p:Platform=arm32 /p:Version=$steps.release.outputs.tag_name

      # 构建 Android AMD32
      - name: 🏗️ 构建 Android AMD32
        shell: pwsh
        run: |
          & "${env:MSBUILD_PATH}" HackerKit.Android/HackerKit.Android.csproj /t:SignAndroidPackage /p:Configuration=Release /p:Platform=amd32 /p:Version=$steps.release.outputs.tag_name

      # 上传 ARM64 APK
      - name: 📤 上传 ARM64 APK
        uses: actions/upload-artifact@v4
        with:
          name: HackerKit-arm64.apk
          path: HackerKit.Android/bin/Release/arm64/*.apk

      # 上传 AMD64 APK
      - name: 📤 上传 AMD64 APK
        uses: actions/upload-artifact@v4
        with:
          name: HackerKit-amd64.apk
          path: HackerKit.Android/bin/Release/amd64/*.apk

      # 上传 ARM32 APK
      - name: 📤 上传 ARM32 APK
        uses: actions/upload-artifact@v4
        with:
          name: HackerKit-arm32.apk
          path: HackerKit.Android/bin/Release/arm32/*.apk

      # 上传 AMD32 APK
      - name: 📤 上传 AMD32 APK
        uses: actions/upload-artifact@v4
        with:
          name: HackerKit-amd32.apk
          path: HackerKit.Android/bin/Release/amd32/*.apk

      # 创建 GitHub Release
      - name: 🪄 创建 GitHub Release
        if: ${{ steps.release.outputs.release_created }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release.outputs.tag_name }}
          name: ${{ steps.release.outputs.tag_name }}
          body: ${{ steps.release.outputs.release_notes }}
          files: |
            HackerKit.Android/bin/Release/arm64/*.apk
            HackerKit.Android/bin/Release/amd64/*.apk
            HackerKit.Android/bin/Release/arm32/*.apk
            HackerKit.Android/bin/Release/amd32/*.apk