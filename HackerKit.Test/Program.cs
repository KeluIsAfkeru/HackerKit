using HackerKit.Models;
using HackerKit.Views;
using HackerKit.Services;

/*测试解码*/
Console.WriteLine("\r\n------------------");
Console.WriteLine("测试解码");
Console.WriteLine("------------------");
var decode_hexStr = "1214E59BBEE59BBEE598BFE7A781F09F949E2E7A69703A8A011287013A1C7B22686569676874223A313032342C227769647468223A313032347D422033443744424538374138323637443039443745333745363631323837384244462214E59BBEE59BBEE598BFE7A781F09F949E2E7A6970280018D2EFCACCAA030866122439383032356238352D373737612D343631312D393039352D38643464323332636131386208061A053142797465";
var decode_hexStr_head
var decode_bytes = BytesService.ParseHexWithSpaces(decode_hexStr);
var decode_bytes_head = BytesService.ParseHexWithSpaces(decode_hexStr_head);
var decode_proto = ProtobufService.Decode(decode_bytes);
var decode_json = decode_proto?.pbJson;
var decode_proto_head = ProtobufService.TryParseWithHead(decode_bytes_head);
var decode_json_head = decode_proto_head?.pbJson;
var decode_proto_head_all = ProtobufService.DeepParseHexProtos(decode_proto_head);
var decode_json_head_all = decode_proto_head_all?.pbJson;

Console.WriteLine($"【解码后未暴力穷举的json】：{decode_json}-------head：{BytesService.BytesToHex(decode_proto.Head)}\n");
Console.WriteLine($"【解码带head的proto】：{decode_json_head}------head：{BytesService.BytesToHex(decode_proto_head.Head)}\n");
Console.WriteLine($"【完全展开解码带head的proto】：{decode_json_head_all}------head：{BytesService.BytesToHex(decode_proto_head_all.Head)}\n");

/*测试编码*/
Console.WriteLine("\r\n------------------");
Console.WriteLine("测试编码");
Console.WriteLine("------------------");

var encode_protoStr = "{\r\n\t\"5\": {\r\n\t\t\"1\": 24,\r\n\t\t\"2\": \"hex->0100AC1214E59BBEE59BBEE598BFE7A781F09F949E2E7A69703A8A011287013A1C7B22686569676874223A313032342C227769647468223A313032347D422033443744424538374138323637443039443745333745363631323837384244462214E59BBEE59BBEE598BFE7A781F09F949E2E7A6970280018D2EFCACCAA030866122439383032356238352D373737612D343631312D393039352D38643464323332636131386208061A053142797465\",\r\n\t\t\"3\": {\r\n\t\t\t\"1\": \"枫叶嘿壳\",\r\n\t\t\t\"2\": \"hex->0100AC1214E59BBEE59BBEE598BFE7A781F09F949E2E7A69703A8A011287013A1C7B22686569676874223A313032342C227769647468223A313032347D422033443744424538374138323637443039443745333745363631323837384244462214E59BBEE59BBEE598BFE7A781F09F949E2E7A6970280018D2EFCACCAA030866122439383032356238352D373737612D343631312D393039352D38643464323332636131386208061A053142797465\"\r\n\t\t}\r\n\t}\r\n}";
var encode_proto = ProtobufService.FromJson(encode_protoStr);
var encode_hex = encode_proto.ToHex();

Console.WriteLine($"【编码后的Protocal Buffer】：{encode_hex}\n");

Console.ReadLine();
